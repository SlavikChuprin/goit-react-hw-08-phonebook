{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Filter/Filter.module.css","components/ContactListItem/ContactListItem.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Contacts/Contacts.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","Filter","dispatch","useDispatch","filter","useSelector","contactsSelectors","getFilter","className","s","filterWrapper","type","onChange","event","filterContact","target","filterInput","ContactListItem","contact","isLoading","getLoading","contactItem","name","number","btnDel","disabled","onClick","id","contactsOperations","deleteContact","color","height","width","timeout","prototype","PropTypes","shape","string","isRequired","onDeleteContact","func","ContactList","useEffect","fetchContacts","contacts","getVisibleContacts","contactList","map","visibleContacts","arrayOf","ContactForm","useState","setName","setNumber","getAllContacts","handleChange","e","reset","onSubmit","preventDefault","some","toLowerCase","alert","addContact","form","input","pattern","title","required","btn","Contacts"],"mappings":"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","file":"static/js/3.141e6ab7.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapper\":\"Filter_filterWrapper__130Qm\",\"filterInput\":\"Filter_filterInput__99ia7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactListItem_contactItem__3bqQI\",\"btnDel\":\"ContactListItem_btnDel__1tzx7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__37IUF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3UxLH\",\"input\":\"ContactForm_input__1Bp0T\",\"btn\":\"ContactForm_btn__2id81\"};","import React from 'react';\r\nimport s from './Filter.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { contactsSelectors } from '../../redux/contacts';\r\nimport { filterContact } from '../../redux/contacts';\r\n\r\nconst Filter = () => {\r\n  const dispatch = useDispatch();\r\n  const filter = useSelector(contactsSelectors.getFilter);\r\n\r\n  // if (!isLoading && !contacts.length) {\r\n  //   return <p>Your phonebook is empty. Please add contact.</p>;\r\n  // }\r\n  return (\r\n    <div className={s.filterWrapper}>\r\n      <label>\r\n        Find contacts by name\r\n        <input\r\n          type=\"text\"\r\n          value={filter}\r\n          onChange={event => dispatch(filterContact(event.target.value))}\r\n          className={s.filterInput}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactListItem.module.css';\r\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\r\nimport { useDispatch } from 'react-redux';\r\nimport Loader from 'react-loader-spinner';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst ContactListItem = ({ contact }) => {\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector(contactsSelectors.getLoading);\r\n  const onDeleteContact = id => dispatch(contactsOperations.deleteContact(id));\r\n  return (\r\n    <li className={s.contactItem}>\r\n      {contact.name}: {contact.number}\r\n      <button\r\n        type=\"button\"\r\n        className={s.btnDel}\r\n        disabled={isLoading}\r\n        onClick={() => onDeleteContact(contact.id)}\r\n      >\r\n        {isLoading ? (\r\n          <Loader\r\n            type=\"Circles\"\r\n            color=\"lightblue\"\r\n            height={12}\r\n            width={12}\r\n            timeout={0}\r\n          />\r\n        ) : (\r\n          'Delete'\r\n        )}\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.prototype = {\r\n  contact: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n  }),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\nexport default ContactListItem;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport ContactListItem from '../ContactListItem';\r\nimport s from './ContactList.module.css';\r\nimport { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { contactsSelectors, contactsOperations } from '../../redux/contacts';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nconst ContactList = () => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\r\n  const contacts = useSelector(contactsSelectors.getVisibleContacts);\r\n  const isLoading = useSelector(contactsSelectors.getLoading);\r\n\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {isLoading && <Loader type=\"Circles\" color=\"lightblue\" />}\r\n      {contacts &&\r\n        contacts.map(contact => (\r\n          <ContactListItem key={contact.id} contact={contact} />\r\n        ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.prototype = {\r\n  visibleContacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList;\r\n","import s from './ContactForm.module.css';\r\nimport { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { contactsSelectors } from '../../redux/contacts';\r\nimport { contactsOperations } from '../../redux/contacts';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nfunction ContactForm() {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const contacts = useSelector(contactsSelectors.getAllContacts);\r\n  const isLoading = useSelector(contactsSelectors.getLoading);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    contacts.some(contact => contact.name.toLowerCase() === name.toLowerCase())\r\n      ? alert(`${name} is already in contacts`)\r\n      : dispatch(contactsOperations.addContact(name, number));\r\n\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.form}>\r\n      <label>\r\n        Name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n      <label>\r\n        Number\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={handleChange}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={s.btn} disabled={isLoading}>\r\n        {isLoading ? (\r\n          <Loader type=\"Circles\" color=\"lightblue\" height={20} width={100} />\r\n        ) : (\r\n          'Add contact'\r\n        )}\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import Filter from '../Filter';\r\nimport ContactList from '../ContactList';\r\nimport ContactForm from '../ContactForm';\r\n\r\nfunction Contacts() {\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"Contacts\">\r\n        <h1>PHONEBOOK</h1>\r\n        <ContactForm />\r\n        <h2> CONTACTS</h2>\r\n        <Filter />\r\n        <ContactList />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Contacts;\r\n"],"sourceRoot":""}