{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/LoginView.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","styles","form","width","label","display","flexDirection","marginBottom","LoginView","dispatch","useDispatch","useState","email","setEmail","password","setPassword","isLoadingData","useSelector","authSelectors","getLoading","handleChange","target","name","type","color","onSubmit","e","preventDefault","authOperations","logIn","style","autoComplete","onChange","autoFocus","required","pattern"],"mappings":"8LAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,0IIAhGC,EAAS,CACbC,KAAM,CACJC,MAAO,KAETC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,aAAc,KAIH,SAASC,IACtB,IAAMC,EAAWC,cACjB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACMC,EAAgBC,YAAYC,IAAcC,YAE1CC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAM1B,EAAc,EAAdA,MACtC,OAAQ0B,GACN,IAAK,QACH,OAAOT,EAASjB,GAClB,IAAK,WACH,OAAOmB,EAAYnB,GACrB,QACE,SAWN,OACE,gCACE,8CACCoB,EACC,cAAC,IAAD,CAAQO,KAAK,UAAUC,MAAM,cAE7B,uBAAMC,SAbS,SAAAC,GACnBA,EAAEC,iBACFlB,EAASmB,IAAeC,MAAM,CAAEjB,QAAOE,cACvCD,EAAS,IACTE,EAAY,KASsBe,MAAO7B,EAAOC,KAAM6B,aAAa,MAA/D,UACE,wBAAOD,MAAO7B,EAAOG,MAArB,2CAEE,uBACEmB,KAAK,QACLD,KAAK,QACL1B,MAAOgB,EACPoB,SAAUZ,EACVW,aAAa,KACbE,WAAS,EACTC,UAAQ,EACRC,QAAQ,0BAIZ,wBAAOL,MAAO7B,EAAOG,MAArB,iDAEE,uBACEmB,KAAK,WACLD,KAAK,WACL1B,MAAOkB,EACPkB,SAAUZ,OAId,wBAAQG,KAAK,SAAb","file":"static/js/4.8f33c8b4.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { authOperations, authSelectors } from '../redux/auth';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nconst styles = {\r\n  form: {\r\n    width: 320,\r\n  },\r\n  label: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    marginBottom: 15,\r\n  },\r\n};\r\n\r\nexport default function LoginView() {\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const isLoadingData = useSelector(authSelectors.getLoading);\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case 'email':\r\n        return setEmail(value);\r\n      case 'password':\r\n        return setPassword(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(authOperations.logIn({ email, password }));\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>LOG IN PAGE </h1>\r\n      {isLoadingData ? (\r\n        <Loader type=\"Circles\" color=\"lightblue\" />\r\n      ) : (\r\n        <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\r\n          <label style={styles.label}>\r\n            Почта\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={handleChange}\r\n              autoComplete=\"on\"\r\n              autoFocus\r\n              required\r\n              pattern=\"\\S+@[a-z]+.[a-z]+\"\r\n            />\r\n          </label>\r\n\r\n          <label style={styles.label}>\r\n            Пароль\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n\r\n          <button type=\"submit\">Войти</button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}