{"version":3,"sources":["components/Container/Container.js","components/Navigation.js","components/UserMenu/default-avatar.png","components/UserMenu/UserMenu.js","components/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/store.js","index.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-reducer.js","components/Container/Container.module.css","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/auth/auth-slice.js"],"names":["Container","children","className","styles","container","link","display","textDecoration","padding","fontWeight","color","activeLink","Navigation","isLoggedIn","useSelector","authSelectors","getIsLoggedIn","to","style","activeStyle","exact","alignItems","avatar","marginRight","name","UserMenu","dispatch","useDispatch","getUsername","defaultAvatar","src","alt","width","type","onClick","authOperations","logOut","header","justifyContent","borderBottom","AppBar","PrivateRoute","redirectTo","routeProps","PublicRoute","restricted","shouldRedirect","LoginView","lazy","RegisterView","Contacts","App","isFetchingCurrentUser","getIsFetchingCurrent","useEffect","fetchCurrentUser","fallback","path","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","contactsReducer","middleware","getDefaultMiddleware","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById","filterContact","createAction","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","contactsOperations","fetchContacts","a","axios","get","data","message","addContact","number","contact","post","then","catch","error","deleteContact","contactId","delete","getFilter","state","filter","getAllContacts","items","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","contactsSelectors","getLoading","createReducer","_","payload","id","combineReducers","module","exports","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","rejectWithValue","alert","logIn","thunkAPI","getState","persistedToken","operations","user","isLoading","authSlice","createSlice","initialState","email","extraReducers","pending","action","fulfilled","rejected"],"mappings":"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","file":"static/js/main.25e65291.chunk.js","sourcesContent":["import styles from './Container.module.css';\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={styles.container}>{children}</div>;\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n\r\nfunction Navigation() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n\r\n  return (\r\n    <nav>\r\n      {!isLoggedIn ? (\r\n        <>\r\n          <NavLink\r\n            to=\"/\"\r\n            exact\r\n            style={styles.link}\r\n            activeStyle={styles.activeLink}\r\n          >\r\n            Logi in\r\n          </NavLink>\r\n          <NavLink\r\n            to=\"/registration\"\r\n            style={styles.link}\r\n            activeStyle={styles.activeLink}\r\n          >\r\n            Registration\r\n          </NavLink>\r\n        </>\r\n      ) : (\r\n        <NavLink\r\n          to=\"/contacts\"\r\n          style={styles.link}\r\n          activeStyle={styles.activeLink}\r\n        >\r\n          Phonebook\r\n        </NavLink>\r\n      )}\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","export default __webpack_public_path__ + \"static/media/default-avatar.75d9fa49.png\";","import { useDispatch, useSelector } from 'react-redux';\r\nimport { authSelectors, authOperations } from '../../redux/auth';\r\nimport defaultAvatar from './default-avatar.png';\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    marginRight: 4,\r\n  },\r\n  name: {\r\n    fontWeight: 700,\r\n    marginRight: 12,\r\n  },\r\n};\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(authSelectors.getUsername);\r\n  const avatar = defaultAvatar;\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} />\r\n      <span style={styles.name}>Добро пожаловать, {name}</span>\r\n      <button type=\"button\" onClick={() => dispatch(authOperations.logOut())}>\r\n        Выйти\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport Navigation from './Navigation';\r\nimport UserMenu from './UserMenu';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst styles = {\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    borderBottom: '1px solid #2A363B',\r\n  },\r\n};\r\n\r\nexport default function AppBar() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <header style={styles.header}>\r\n      <Navigation />\r\n      {isLoggedIn && <UserMenu />}\r\n    </header>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\n/**\r\n * 1. Он должен повторять API Route\r\n *  2. Он должен рендерить Route\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на redirectTo\r\n */\r\n\r\nexport default function PrivateRoute({\r\n  children,\r\n  redirectTo = '/',\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\n/**\r\n * - Если маршрут ограниченный, и юзер залогинен, рендерит редирект на redirectTo\r\n * - В противном случае рендерит компонент\r\n *\r\n */\r\n\r\nexport default function PublicRoute({\r\n  children,\r\n  restricted = false,\r\n  redirectTo = '/',\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  const shouldRedirect = isLoggedIn && restricted;\r\n  return (\r\n    <Route {...routeProps}>\r\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\r\n    </Route>\r\n  );\r\n}\r\n","import './App.css';\r\nimport Container from './components/Container';\r\nimport { useEffect, Suspense, lazy } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Switch } from 'react-router-dom';\r\nimport AppBar from './components/AppBar';\r\nimport { authOperations, authSelectors } from './redux/auth';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport PublicRoute from './components/PublicRoute';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nconst LoginView = lazy(() => import('./views/LoginView'));\r\nconst RegisterView = lazy(() => import('./views/RegisterView'));\r\nconst Contacts = lazy(() => import('./components/Contacts'));\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const isFetchingCurrentUser = useSelector(authSelectors.getIsFetchingCurrent);\r\n  \r\n  useEffect(() => {\r\n    dispatch(authOperations.fetchCurrentUser());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {!isFetchingCurrentUser && (\r\n        <Container>\r\n          <AppBar />\r\n\r\n          <Switch>\r\n            <Suspense fallback={<Loader type=\"Circles\" color=\"lightblue\" />}>\r\n              <PublicRoute path=\"/\" exact restricted redirectTo=\"/contacts\">\r\n                <LoginView />\r\n              </PublicRoute>\r\n              <PublicRoute\r\n                path=\"/registration\"\r\n                restricted\r\n                redirectTo=\"/contacts\"\r\n              >\r\n                <RegisterView />\r\n              </PublicRoute>\r\n\r\n              <PrivateRoute path=\"/contacts\" exact>\r\n                <Contacts />\r\n              </PrivateRoute>\r\n            </Suspense>\r\n          </Switch>\r\n        </Container>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport { contactsReducer } from './contacts';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { authReducer } from './auth';\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware: getDefaultMiddleware => [...getDefaultMiddleware()],\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const filterContact = createAction('contacts/filter');\r\n\r\nexport const fetchContactsRequest = createAction('todos/fetchContactsRequest');\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSuccess',\r\n);\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n","import axios from 'axios';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} from './contacts-actions';\r\n\r\n// GET @\r\nconst fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error.message));\r\n  }\r\n};\r\n\r\n// POST @ /tasks\r\nconst addContact = (name, number) => dispatch => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error.message)));\r\n};\r\n\r\n// DELETE @ /tasks/:id\r\nconst deleteContact = contactId => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(deleteContactSuccess(contactId)))\r\n    .catch(error => dispatch(deleteContactError(error.message)));\r\n};\r\n\r\nconst contactsOperations = {\r\n  fetchContacts,\r\n  addContact,\r\n  deleteContact,\r\n};\r\nexport default contactsOperations;\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getLoading = state => state.contacts.loading;\r\nconst getFilter = state => state.contacts.filter;\r\nconst getAllContacts = state => state.contacts.items;\r\n\r\nconst getVisibleContacts = createSelector(\r\n  getAllContacts,\r\n  getFilter,\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n\r\nconst contactsSelectors = {\r\n  getLoading,\r\n  getFilter,\r\n  getVisibleContacts,\r\n  getAllContacts,\r\n};\r\nexport default contactsSelectors;\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  filterContact,\r\n} from './contacts-actions';\r\n\r\nconst filter = createReducer('', {\r\n  [filterContact]: (_, { payload }) => payload,\r\n});\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__20AM_\"};","import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com/';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\n/*\r\n * POST @ /users/signup\r\n * body: { name, email, password }\r\n * После успешной регистрации добавляем токен в HTTP-заголовок\r\n */\r\nconst register = createAsyncThunk(\r\n  'auth/register',\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.post('/users/signup', credentials);\r\n      token.set(data.token);\r\n      return data;\r\n    } catch (error) {\r\n      alert('что-то пошло не так, попробуйте снова зарегистрироваться');\r\n      return rejectWithValue();\r\n    }\r\n  },\r\n);\r\n\r\n/*\r\n * POST @ /users/login\r\n * body: { email, password }\r\n * После успешного логина добавляем токен в HTTP-заголовок\r\n */\r\nconst logIn = createAsyncThunk(\r\n  'auth/login',\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.post('/users/login', credentials);\r\n      token.set(data.token);\r\n      return data;\r\n    } catch (error) {\r\n      alert('неверный логин или пароль');\r\n      return rejectWithValue();\r\n    }\r\n  },\r\n);\r\n\r\n/*\r\n * POST @ /users/logout\r\n * headers: Authorization: Bearer token\r\n * После успешного логаута, удаляем токен из HTTP-заголовка\r\n */\r\nconst logOut = createAsyncThunk('auth/logout', async () => {\r\n  try {\r\n    await axios.post('/users/logout');\r\n    token.unset();\r\n  } catch (error) {\r\n    // TODO: Добавить обработку ошибки error.message\r\n  }\r\n});\r\n/*\r\n * GET @ /users/current\r\n * headers:\r\n *    Authorization: Bearer token\r\n *\r\n * 1. Забираем токен из стейта через getState()\r\n * 2. Если токена нет, выходим не выполняя никаких операций\r\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\r\n */\r\nconst fetchCurrentUser = createAsyncThunk(\r\n  'auth/refresh',\r\n  async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    const persistedToken = state.auth.token;\r\n\r\n    if (persistedToken === null) {\r\n      return thunkAPI.rejectWithValue();\r\n    }\r\n\r\n    token.set(persistedToken);\r\n    try {\r\n      const { data } = await axios.get('/users/current');\r\n      return data;\r\n    } catch (error) {\r\n      // TODO: Добавить обработку ошибки error.message\r\n    }\r\n  },\r\n);\r\n\r\nconst operations = {\r\n  register,\r\n  logOut,\r\n  logIn,\r\n  fetchCurrentUser,\r\n};\r\nexport default operations;\r\n","const getIsLoggedIn = state => state.auth.isLoggedIn;\r\nconst getUsername = state => state.auth.user.name;\r\nconst getIsFetchingCurrent = state => state.auth.isFetchingCurrentUser;\r\nconst getLoading = state => state.auth.isLoading;\r\nconst authSelectors = {\r\n  getIsLoggedIn,\r\n  getUsername,\r\n  getIsFetchingCurrent,\r\n  getLoading,\r\n};\r\nexport default authSelectors;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport authOperations from './auth-operations';\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggedIn: false,\r\n  isLoading: false,\r\n  isFetchingCurrentUser: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  extraReducers: {\r\n    [authOperations.register.pending](state, action) {\r\n      state.isLoading = true;\r\n    },\r\n    [authOperations.register.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n      state.isLoading = false;\r\n    },\r\n    [authOperations.register.rejected](state) {\r\n      state.isLoading = false;\r\n    },\r\n    [authOperations.logIn.pending](state, action) {\r\n      state.isLoading = true;\r\n    },\r\n    [authOperations.logIn.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n      state.isLoading = false;\r\n    },\r\n    [authOperations.logIn.rejected](state) {\r\n      state.isLoading = false;\r\n    },\r\n    [authOperations.logOut.fulfilled](state, action) {\r\n      state.user = { name: null, email: null };\r\n      state.token = null;\r\n      state.isLoggedIn = false;\r\n    },\r\n    [authOperations.fetchCurrentUser.pending](state) {\r\n      state.isFetchingCurrentUser = true;\r\n    },\r\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\r\n      state.user = action.payload;\r\n      state.isLoggedIn = true;\r\n      state.isFetchingCurrentUser = false;\r\n    },\r\n    [authOperations.fetchCurrentUser.rejected](state) {\r\n      state.isFetchingCurrentUser = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n"],"sourceRoot":""}